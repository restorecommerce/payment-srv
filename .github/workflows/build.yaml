name: build

on: push

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '20.8.0'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

  test:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '20.8.0'

      - name: Setup System
        uses: restorecommerce/setup-system-action@v1

      - name: Install Dependencies
        run: npm ci

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install ruby dependencies
        working-directory: scripts
        run: gem install bundler && bundle install --jobs 4 --retry 3

      - name: Test
        run: npm run test && npm run lcov-report
        env:
          payments__gateways__PayPalExpressCheckout__login: ${{ secrets.PAYMENTS__GATEWAYS__PAYPALEXPRESSCHECKOUT__LOGIN }}
          payments__gateways__PayPalExpressCheckout__password: ${{ secrets.PAYMENTS__GATEWAYS__PAYPALEXPRESSCHECKOUT__PASSWORD }}
          payments__gateways__PayPalExpressCheckout__signature: ${{ secrets.PAYMENTS__GATEWAYS__PAYPALEXPRESSCHECKOUT__SIGNATURE }}
          payments__tests__PayPalExpressCheckout__email: ${{ secrets.PAYMENTS__TESTS__PAYPALEXPRESSCHECKOUT__EMAIL }}
          payments__tests__PayPalExpressCheckout__password: ${{ secrets.PAYMENTS__TESTS__PAYPALEXPRESSCHECKOUT__PASSWORD }}

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  image:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1

      - name: Set variables
        id: vars
        run: |
          echo ::set-output name=version_tag::$(echo ${GITHUB_REF#refs/*/})
          echo ::set-output name=repo_name::$(echo ${GITHUB_REPOSITORY#*/*})

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          build-args: |
            APP_HOME=/home/node/${{ steps.vars.outputs.repo_name }}
          cache-from: |
            ${{ github.repository }}:latest
